<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on 忍ばない怠惰テックノート</title><link>https://shinobukun.github.io/shinobanai-tech-blog-public-pages/tags/git/</link><description>Recent content in Git on 忍ばない怠惰テックノート</description><generator>Hugo</generator><language>ja</language><lastBuildDate>Sat, 12 Jul 2025 00:17:13 +0900</lastBuildDate><atom:link href="https://shinobukun.github.io/shinobanai-tech-blog-public-pages/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Gitコマンドやりたいこと逆引き集</title><link>https://shinobukun.github.io/shinobanai-tech-blog-public-pages/posts/git-command-cheat-sheet/</link><pubDate>Sat, 12 Jul 2025 00:17:13 +0900</pubDate><guid>https://shinobukun.github.io/shinobanai-tech-blog-public-pages/posts/git-command-cheat-sheet/</guid><description>&lt;h2 id="基本操作">基本操作&lt;/h2>
&lt;h3 id="追加編集したファイルをインデックスに追加する-git-add">追加・編集したファイルをインデックスに追加する (git add)&lt;/h3>
&lt;h4 id="全て">全て&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ git add .
&lt;/code>&lt;/pre>&lt;h4 id="特定の拡張子のみ">特定の拡張子のみ&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ git add *.txt *.jpg
&lt;/code>&lt;/pre>&lt;h4 id="特定の文字列を含むもの">特定の文字列を含むもの&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ git add *hoge* *age*
&lt;/code>&lt;/pre>&lt;h3 id="インデックスに追加したファイルをワーキングツリーに戻す--git-reset-">インデックスに追加したファイルをワーキングツリーに戻す ( git reset )&lt;/h3>
&lt;h4 id="全て-1">全て&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ git reset .
&lt;/code>&lt;/pre>&lt;h4 id="特定の拡張子のみ-1">特定の拡張子のみ&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ git reset *.txt *.jpg
&lt;/code>&lt;/pre>&lt;h4 id="特定の文字列を含むもの-1">特定の文字列を含むもの&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ git add *hoge* *age*
&lt;/code>&lt;/pre>&lt;h3 id="コミットする-git-commit--m">コミットする (git commit -m)&lt;/h3>
&lt;pre tabindex="0">&lt;code># -m オプションを付けると、エディターを開かずにメッセージを追加してコミットできる
$ git commit -m &amp;#34;enter your commit message&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="一時退避">一時退避&lt;/h3>
&lt;h4 id="一時的に作業を退避させたい">一時的に作業を退避させたい&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ git stash save &amp;#34;ここに内容のメッセージ&amp;#34;
&lt;/code>&lt;/pre>&lt;h4 id="退避させている作業の一覧を表示したい">退避させている作業の一覧を表示したい&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ git stash list

# 結果例
# stash@{0}: On master: ここに内容のメッセージ2
# stash@{1}: On master: ここに内容のメッセージ1
&lt;/code>&lt;/pre>&lt;h4 id="退避させている作業を復元したい">退避させている作業を復元したい&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ git stash apply stash@{0}

# 復元したい作業のインデックスを git stash list で確認し、
# git stash apply の後ろに記述して引数として渡す
&lt;/code>&lt;/pre>&lt;h3 id="ブランチ操作">ブランチ操作&lt;/h3>
&lt;h4 id="存在するブランチを一覧表示する--git-branch-">存在するブランチを一覧表示する ( git branch )&lt;/h4>
&lt;pre tabindex="0">&lt;code># ローカルリポジトリに有るブランチを一覧表示する
$ git branch

# リモートリポジトリに有るブランチを一覧表示する
$ git branch -r
&lt;/code>&lt;/pre>&lt;h4 id="ブランチを作成変更--git-checkout-">ブランチを作成・変更 ( git checkout )&lt;/h4>
&lt;pre tabindex="0">&lt;code># hogeというブランチを作成する
$ git checkout -b hoge

# ageというブランチに変更する
$ git checkout age
&lt;/code>&lt;/pre>&lt;h3 id="リモートリポジトリ操作">リモートリポジトリ操作&lt;/h3>
&lt;h4 id="既存のリモートリポジトリからクローンしたい--git-clone-">既存のリモートリポジトリからクローンしたい ( git clone )&lt;/h4>
&lt;pre tabindex="0">&lt;code># https://gitjhub.com/hogehoge.git からローカルにクローンする
$ git clone https://gitjhub.com/hogehoge.git
&lt;/code>&lt;/pre>&lt;h4 id="リモートリポジトリから変更内容の確認取得だけ行う--git-fetch-">リモートリポジトリから変更内容の確認・取得だけ行う ( git fetch )&lt;/h4>
&lt;pre tabindex="0">&lt;code># リモートリポジトリから変更内容の取得だけ行い、ローカルリポジトリには反映されない
$ git fetch
&lt;/code>&lt;/pre></description></item></channel></rss>